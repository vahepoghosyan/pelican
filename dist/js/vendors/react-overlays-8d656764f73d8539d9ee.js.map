{"version":3,"sources":["webpack:///./node_modules/react-overlays/esm/Dropdown.js","webpack:///./node_modules/react-overlays/esm/Modal.js","webpack:///./node_modules/react-overlays/esm/useWaitForDOMRef.js","webpack:///./node_modules/react-overlays/esm/DropdownContext.js","webpack:///./node_modules/react-overlays/esm/DropdownToggle.js","webpack:///./node_modules/react-overlays/esm/popper.js","webpack:///./node_modules/react-overlays/esm/usePopper.js","webpack:///./node_modules/react-overlays/esm/ownerDocument.js","webpack:///./node_modules/react-overlays/esm/safeFindDOMNode.js","webpack:///./node_modules/react-overlays/esm/useRootClose.js","webpack:///./node_modules/react-overlays/esm/DropdownMenu.js","webpack:///./node_modules/react-overlays/esm/isOverflowing.js","webpack:///./node_modules/react-overlays/esm/manageAriaHidden.js","webpack:///./node_modules/react-overlays/esm/ModalManager.js"],"names":["propTypes","children","PropTypes","func","isRequired","drop","oneOf","focusFirstItemOnShow","itemSelector","string","alignEnd","bool","show","defaultShow","onToggle","Dropdown","_ref","rawShow","rawOnToggle","_ref$itemSelector","forceUpdate","useForceUpdate","_useUncontrolledProp","useUncontrolledProp","_useCallbackRef","useCallbackRef","toggleElement","setToggle","menuRef","useRef","menuElement","current","setMenu","useCallback","ref","lastShow","usePrevious","lastSourceEvent","focusInDropdown","toggle","event","context","useMemo","contains","document","activeElement","focusToggle","useEventCallback","focus","maybeFocusFirst","type","focusType","matches","test","first","qsa","useEffect","getNextFocusedChild","offset","items","index","indexOf","Math","max","min","length","React","createElement","DropdownContext","Provider","value","props","onKeyDown","key","target","tagName","next","preventDefault","_next","displayName","Menu","DropdownMenu","Toggle","DropdownToggle","manager","resolveContainerRef","ownerDocument","body","nodeType","useModalManager","provided","modalManager","ModalManager","modal","dialog","backdrop","Object","assign","add","container","className","remove","isTopModal","setDialogRef","setBackdropRef","Modal","forwardRef","_ref$show","_ref$role","role","style","_ref$backdrop","_ref$keyboard","keyboard","onBackdropClick","onEscapeKeyDown","transition","backdropTransition","_ref$autoFocus","autoFocus","_ref$enforceFocus","enforceFocus","_ref$restoreFocus","restoreFocus","restoreFocusOptions","renderDialog","_ref$renderBackdrop","renderBackdrop","providedManager","containerRef","containerClassName","onShow","_ref$onHide","onHide","onExit","onExited","onExiting","onEnter","onEntering","onEntered","rest","_objectWithoutPropertiesLoose","onResolved","_useState","useState","resolvedRef","setRef","earlyRef","nextRef","useWaitForDOMRef","isMounted","useMounted","prevShow","exited","setExited","lastFocusRef","useImperativeHandle","canUseDOM","handleShow","removeKeydownListenerRef","listen","handleDocumentKeyDown","removeFocusListenerRef","setTimeout","handleEnforceFocus","currentActiveElement","handleHide","_lastFocusRef$current","useWillUnmount","handleBackdropClick","e","currentTarget","keyCode","Transition","dialogProps","_extends","undefined","tabIndex","cloneElement","appear","unmountOnExit","_len","arguments","args","Array","_key","apply","backdropElement","BackdropTransition","onClick","Fragment","ReactDOM","createPortal","any","oneOfType","elementType","shape","preventScroll","instanceOf","Manager","createContext","noop","useDropdownToggle","useContext","_ref$toggle","_ref2","_useDropdownToggle","_useDropdownToggle$","createPopper","popperGenerator","defaultModifiers","hide","popperOffsets","computeStyles","eventListeners","flip","preventOverflow","arrow","initialPopperStyles","position","top","left","opacity","pointerEvents","initialArrowStyles","usePopper","referenceElement","popperElement","_temp","map","_ref$enabled","enabled","_ref$placement","placement","_ref$strategy","strategy","_ref$eventsEnabled","eventsEnabled","userModifiers","modifiers","popperOptions","popperInstanceRef","scheduleUpdate","update","_useSafeState","useSafeState","outOfBoundaries","styles","arrowStyles","state","setState","updateModifier","name","phase","requires","fn","data","_data$state$modifiers","_data$state$styles","_data$state$styles2","modifiersData","isReferenceHidden","popper","isArray","keys","k","eventsModifier","find","m","concat","setOptions","destroy","s","componentOrElement","findDOMNode","safeFindDOMNode","getRefTarget","useRootClose","onRootClose","disabled","_ref$clickTrigger","clickTrigger","preventMouseRootCloseRef","onClose","handleMouseCapture","warning","metaKey","altKey","ctrlKey","shiftKey","button","isLeftClickEvent","handleMouse","handleKeyUp","doc","removeMouseCaptureListener","removeMouseListener","removeKeyupListener","mobileSafariHackListeners","documentElement","slice","call","el","forEach","useDropdownMenu","options","_modifiers$arrow","arrowElement","attachArrowRef","hasShownRef","_options","rootCloseEvent","_options$popperConfig","popperConfig","_options$usePopper","shouldUsePopper","handleClose","menu","result","toModifierMap","element","menuProps","id","childArgs","hasShown","close","arrowProps","object","defaultProps","isOverflowing","node","isWindow","toLowerCase","win","defaultView","clientWidth","innerWidth","bodyIsOverflowing","scrollHeight","clientHeight","BLACKLIST","siblings","exclude","cb","ariaHidden","setAttribute","removeAttribute","_ref$hideSiblingNodes","hideSiblingNodes","_ref$handleContainerO","handleContainerOverflow","this","modals","containers","scrollbarSize","getScrollbarSize","_proto","prototype","isContainerOverflowing","containerIndexFromModal","overflowing","arr","d","idx","some","i","setContainerStyle","containerState","overflow","paddingRight","parseInt","css","removeContainerStyle","modalIdx","containerIdx","push","hideSiblings","classes","split","addClass","bind","splice","removeClass","_ref3","showSiblings","_data$modals"],"mappings":"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","file":"js/vendors/react-overlays-8d656764f73d8539d9ee.js","sourcesContent":["import matches from 'dom-helpers/matches';\nimport qsa from 'dom-helpers/querySelectorAll';\nimport React, { useCallback, useRef, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport { useUncontrolledProp } from 'uncontrollable';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport useForceUpdate from '@restart/hooks/useForceUpdate';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport DropdownContext from './DropdownContext';\nimport DropdownMenu from './DropdownMenu';\nimport DropdownToggle from './DropdownToggle';\nvar propTypes = {\n  /**\n   * A render prop that returns the root dropdown element. The `props`\n   * argument should spread through to an element containing _both_ the\n   * menu and toggle in order to handle keyboard events for focus management.\n   *\n   * @type {Function ({\n   *   props: {\n   *     onKeyDown: (SyntheticEvent) => void,\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Determines the direction and location of the Menu in relation to it's Toggle.\n   */\n  drop: PropTypes.oneOf(['up', 'left', 'right', 'down']),\n\n  /**\n   * Controls the focus behavior for when the Dropdown is opened. Set to\n   * `true` to always focus the first menu item, `keyboard` to focus only when\n   * navigating via the keyboard, or `false` to disable completely\n   *\n   * The Default behavior is `false` **unless** the Menu has a `role=\"menu\"`\n   * where it will default to `keyboard` to match the recommended [ARIA Authoring practices](https://www.w3.org/TR/wai-aria-practices-1.1/#menubutton).\n   */\n  focusFirstItemOnShow: PropTypes.oneOf([false, true, 'keyboard']),\n\n  /**\n   * A css slector string that will return __focusable__ menu items.\n   * Selectors should be relative to the menu component:\n   * e.g. ` > li:not('.disabled')`\n   */\n  itemSelector: PropTypes.string,\n\n  /**\n   * Align the menu to the 'end' side of the placement side of the Dropdown toggle. The default placement is `top-start` or `bottom-start`.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Whether or not the Dropdown is visible.\n   *\n   * @controllable onToggle\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Sets the initial show position of the Dropdown.\n   */\n  defaultShow: PropTypes.bool,\n\n  /**\n   * A callback fired when the Dropdown wishes to change visibility. Called with the requested\n   * `show` value, the DOM event, and the source that fired it: `'click'`,`'keydown'`,`'rootClose'`, or `'select'`.\n   *\n   * ```ts static\n   * function(\n   *   isOpen: boolean,\n   *   event: SyntheticEvent,\n   * ): void\n   * ```\n   *\n   * @controllable show\n   */\n  onToggle: PropTypes.func\n};\n\n/**\n * @displayName Dropdown\n */\nfunction Dropdown(_ref) {\n  var drop = _ref.drop,\n      alignEnd = _ref.alignEnd,\n      defaultShow = _ref.defaultShow,\n      rawShow = _ref.show,\n      rawOnToggle = _ref.onToggle,\n      _ref$itemSelector = _ref.itemSelector,\n      itemSelector = _ref$itemSelector === void 0 ? '* > *' : _ref$itemSelector,\n      focusFirstItemOnShow = _ref.focusFirstItemOnShow,\n      children = _ref.children;\n  var forceUpdate = useForceUpdate();\n\n  var _useUncontrolledProp = useUncontrolledProp(rawShow, defaultShow, rawOnToggle),\n      show = _useUncontrolledProp[0],\n      onToggle = _useUncontrolledProp[1];\n\n  var _useCallbackRef = useCallbackRef(),\n      toggleElement = _useCallbackRef[0],\n      setToggle = _useCallbackRef[1]; // We use normal refs instead of useCallbackRef in order to populate the\n  // the value as quickly as possible, otherwise the effect to focus the element\n  // may run before the state value is set\n\n\n  var menuRef = useRef(null);\n  var menuElement = menuRef.current;\n  var setMenu = useCallback(function (ref) {\n    menuRef.current = ref; // ensure that a menu set triggers an update for consumers\n\n    forceUpdate();\n  }, [forceUpdate]);\n  var lastShow = usePrevious(show);\n  var lastSourceEvent = useRef(null);\n  var focusInDropdown = useRef(false);\n  var toggle = useCallback(function (event) {\n    onToggle(!show, event);\n  }, [onToggle, show]);\n  var context = useMemo(function () {\n    return {\n      toggle: toggle,\n      drop: drop,\n      show: show,\n      alignEnd: alignEnd,\n      menuElement: menuElement,\n      toggleElement: toggleElement,\n      setMenu: setMenu,\n      setToggle: setToggle\n    };\n  }, [toggle, drop, show, alignEnd, menuElement, toggleElement, setMenu, setToggle]);\n\n  if (menuElement && lastShow && !show) {\n    focusInDropdown.current = menuElement.contains(document.activeElement);\n  }\n\n  var focusToggle = useEventCallback(function () {\n    if (toggleElement && toggleElement.focus) {\n      toggleElement.focus();\n    }\n  });\n  var maybeFocusFirst = useEventCallback(function () {\n    var type = lastSourceEvent.current;\n    var focusType = focusFirstItemOnShow;\n\n    if (focusType == null) {\n      focusType = menuRef.current && matches(menuRef.current, '[role=menu]') ? 'keyboard' : false;\n    }\n\n    if (focusType === false || focusType === 'keyboard' && !/^key.+$/.test(type)) {\n      return;\n    }\n\n    var first = qsa(menuRef.current, itemSelector)[0];\n    if (first && first.focus) first.focus();\n  });\n  useEffect(function () {\n    if (show) maybeFocusFirst();else if (focusInDropdown.current) {\n      focusInDropdown.current = false;\n      focusToggle();\n    } // only `show` should be changing\n  }, [show, focusInDropdown, focusToggle, maybeFocusFirst]);\n  useEffect(function () {\n    lastSourceEvent.current = null;\n  });\n\n  var getNextFocusedChild = function getNextFocusedChild(current, offset) {\n    if (!menuRef.current) return null;\n    var items = qsa(menuRef.current, itemSelector);\n    var index = items.indexOf(current) + offset;\n    index = Math.max(0, Math.min(index, items.length));\n    return items[index];\n  };\n\n  var handleKeyDown = function handleKeyDown(event) {\n    var key = event.key;\n    var target = event.target; // Second only to https://github.com/twbs/bootstrap/blob/8cfbf6933b8a0146ac3fbc369f19e520bd1ebdac/js/src/dropdown.js#L400\n    // in inscrutability\n\n    var isInput = /input|textarea/i.test(target.tagName);\n\n    if (isInput && (key === ' ' || key !== 'Escape' && menuRef.current && menuRef.current.contains(target))) {\n      return;\n    }\n\n    lastSourceEvent.current = event.type;\n\n    switch (key) {\n      case 'ArrowUp':\n        {\n          var next = getNextFocusedChild(target, -1);\n          if (next && next.focus) next.focus();\n          event.preventDefault();\n          return;\n        }\n\n      case 'ArrowDown':\n        event.preventDefault();\n\n        if (!show) {\n          toggle(event);\n        } else {\n          var _next = getNextFocusedChild(target, 1);\n\n          if (_next && _next.focus) _next.focus();\n        }\n\n        return;\n\n      case 'Escape':\n      case 'Tab':\n        onToggle(false, event);\n        break;\n\n      default:\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(DropdownContext.Provider, {\n    value: context\n  }, children({\n    props: {\n      onKeyDown: handleKeyDown\n    }\n  }));\n}\n\nDropdown.displayName = 'ReactOverlaysDropdown';\nDropdown.propTypes = propTypes;\nDropdown.Menu = DropdownMenu;\nDropdown.Toggle = DropdownToggle;\nexport default Dropdown;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n/* eslint-disable react/prop-types */\nimport activeElement from 'dom-helpers/activeElement';\nimport contains from 'dom-helpers/contains';\nimport canUseDOM from 'dom-helpers/canUseDOM';\nimport listen from 'dom-helpers/listen';\nimport PropTypes from 'prop-types';\nimport React, { useState, useRef, useCallback, useImperativeHandle, forwardRef, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport useMounted from '@restart/hooks/useMounted';\nimport useWillUnmount from '@restart/hooks/useWillUnmount';\nimport usePrevious from '@restart/hooks/usePrevious';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport ModalManager from './ModalManager';\nimport useWaitForDOMRef from './useWaitForDOMRef';\nvar manager;\n\nfunction getManager() {\n  if (!manager) manager = new ModalManager();\n  return manager;\n}\n\nfunction useModalManager(provided) {\n  var modalManager = provided || getManager();\n  var modal = useRef({\n    dialog: null,\n    backdrop: null\n  });\n  return Object.assign(modal.current, {\n    add: function add(container, className) {\n      return modalManager.add(modal.current, container, className);\n    },\n    remove: function remove() {\n      return modalManager.remove(modal.current);\n    },\n    isTopModal: function isTopModal() {\n      return modalManager.isTopModal(modal.current);\n    },\n    setDialogRef: useCallback(function (ref) {\n      modal.current.dialog = ref;\n    }, []),\n    setBackdropRef: useCallback(function (ref) {\n      modal.current.backdrop = ref;\n    }, [])\n  });\n}\n\nvar Modal = forwardRef(function (_ref, ref) {\n  var _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$role = _ref.role,\n      role = _ref$role === void 0 ? 'dialog' : _ref$role,\n      className = _ref.className,\n      style = _ref.style,\n      children = _ref.children,\n      _ref$backdrop = _ref.backdrop,\n      backdrop = _ref$backdrop === void 0 ? true : _ref$backdrop,\n      _ref$keyboard = _ref.keyboard,\n      keyboard = _ref$keyboard === void 0 ? true : _ref$keyboard,\n      onBackdropClick = _ref.onBackdropClick,\n      onEscapeKeyDown = _ref.onEscapeKeyDown,\n      transition = _ref.transition,\n      backdropTransition = _ref.backdropTransition,\n      _ref$autoFocus = _ref.autoFocus,\n      autoFocus = _ref$autoFocus === void 0 ? true : _ref$autoFocus,\n      _ref$enforceFocus = _ref.enforceFocus,\n      enforceFocus = _ref$enforceFocus === void 0 ? true : _ref$enforceFocus,\n      _ref$restoreFocus = _ref.restoreFocus,\n      restoreFocus = _ref$restoreFocus === void 0 ? true : _ref$restoreFocus,\n      restoreFocusOptions = _ref.restoreFocusOptions,\n      renderDialog = _ref.renderDialog,\n      _ref$renderBackdrop = _ref.renderBackdrop,\n      renderBackdrop = _ref$renderBackdrop === void 0 ? function (props) {\n    return /*#__PURE__*/React.createElement(\"div\", props);\n  } : _ref$renderBackdrop,\n      providedManager = _ref.manager,\n      containerRef = _ref.container,\n      containerClassName = _ref.containerClassName,\n      onShow = _ref.onShow,\n      _ref$onHide = _ref.onHide,\n      onHide = _ref$onHide === void 0 ? function () {} : _ref$onHide,\n      onExit = _ref.onExit,\n      onExited = _ref.onExited,\n      onExiting = _ref.onExiting,\n      onEnter = _ref.onEnter,\n      onEntering = _ref.onEntering,\n      onEntered = _ref.onEntered,\n      rest = _objectWithoutPropertiesLoose(_ref, [\"show\", \"role\", \"className\", \"style\", \"children\", \"backdrop\", \"keyboard\", \"onBackdropClick\", \"onEscapeKeyDown\", \"transition\", \"backdropTransition\", \"autoFocus\", \"enforceFocus\", \"restoreFocus\", \"restoreFocusOptions\", \"renderDialog\", \"renderBackdrop\", \"manager\", \"container\", \"containerClassName\", \"onShow\", \"onHide\", \"onExit\", \"onExited\", \"onExiting\", \"onEnter\", \"onEntering\", \"onEntered\"]);\n\n  var container = useWaitForDOMRef(containerRef);\n  var modal = useModalManager(providedManager);\n  var isMounted = useMounted();\n  var prevShow = usePrevious(show);\n\n  var _useState = useState(!show),\n      exited = _useState[0],\n      setExited = _useState[1];\n\n  var lastFocusRef = useRef(null);\n  useImperativeHandle(ref, function () {\n    return modal;\n  }, [modal]);\n\n  if (canUseDOM && !prevShow && show) {\n    lastFocusRef.current = activeElement();\n  }\n\n  if (!transition && !show && !exited) {\n    setExited(true);\n  } else if (show && exited) {\n    setExited(false);\n  }\n\n  var handleShow = useEventCallback(function () {\n    modal.add(container, containerClassName);\n    removeKeydownListenerRef.current = listen(document, 'keydown', handleDocumentKeyDown);\n    removeFocusListenerRef.current = listen(document, 'focus', // the timeout is necessary b/c this will run before the new modal is mounted\n    // and so steals focus from it\n    function () {\n      return setTimeout(handleEnforceFocus);\n    }, true);\n\n    if (onShow) {\n      onShow();\n    } // autofocus after onShow to not trigger a focus event for previous\n    // modals before this one is shown.\n\n\n    if (autoFocus) {\n      var currentActiveElement = activeElement(document);\n\n      if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n        lastFocusRef.current = currentActiveElement;\n        modal.dialog.focus();\n      }\n    }\n  });\n  var handleHide = useEventCallback(function () {\n    modal.remove();\n    removeKeydownListenerRef.current == null ? void 0 : removeKeydownListenerRef.current();\n    removeFocusListenerRef.current == null ? void 0 : removeFocusListenerRef.current();\n\n    if (restoreFocus) {\n      var _lastFocusRef$current;\n\n      // Support: <=IE11 doesn't support `focus()` on svg elements (RB: #917)\n      (_lastFocusRef$current = lastFocusRef.current) == null ? void 0 : _lastFocusRef$current.focus == null ? void 0 : _lastFocusRef$current.focus(restoreFocusOptions);\n      lastFocusRef.current = null;\n    }\n  }); // TODO: try and combine these effects: https://github.com/react-bootstrap/react-overlays/pull/794#discussion_r409954120\n  // Show logic when:\n  //  - show is `true` _and_ `container` has resolved\n\n  useEffect(function () {\n    if (!show || !container) return;\n    handleShow();\n  }, [show, container,\n  /* should never change: */\n  handleShow]); // Hide cleanup logic when:\n  //  - `exited` switches to true\n  //  - component unmounts;\n\n  useEffect(function () {\n    if (!exited) return;\n    handleHide();\n  }, [exited, handleHide]);\n  useWillUnmount(function () {\n    handleHide();\n  }); // --------------------------------\n\n  var handleEnforceFocus = useEventCallback(function () {\n    if (!enforceFocus || !isMounted() || !modal.isTopModal()) {\n      return;\n    }\n\n    var currentActiveElement = activeElement();\n\n    if (modal.dialog && currentActiveElement && !contains(modal.dialog, currentActiveElement)) {\n      modal.dialog.focus();\n    }\n  });\n  var handleBackdropClick = useEventCallback(function (e) {\n    if (e.target !== e.currentTarget) {\n      return;\n    }\n\n    onBackdropClick == null ? void 0 : onBackdropClick(e);\n\n    if (backdrop === true) {\n      onHide();\n    }\n  });\n\n  var handleDocumentKeyDown = function handleDocumentKeyDown(e) {\n    if (keyboard && e.keyCode === 27 && modal.isTopModal()) {\n      onEscapeKeyDown == null ? void 0 : onEscapeKeyDown(e);\n      onHide();\n    }\n  };\n\n  var removeFocusListenerRef = useRef();\n  var removeKeydownListenerRef = useRef();\n\n  var handleHidden = function handleHidden() {\n    setExited(true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    onExited == null ? void 0 : onExited.apply(void 0, args);\n  };\n\n  var Transition = transition;\n\n  if (!container || !(show || Transition && !exited)) {\n    return null;\n  }\n\n  var dialogProps = _extends({\n    role: role,\n    ref: modal.setDialogRef,\n    // apparently only works on the dialog role element\n    'aria-modal': role === 'dialog' ? true : undefined\n  }, rest, {\n    style: style,\n    className: className,\n    tabIndex: -1\n  });\n\n  var dialog = renderDialog ? renderDialog(dialogProps) : /*#__PURE__*/React.createElement(\"div\", dialogProps, React.cloneElement(children, {\n    role: 'document'\n  }));\n\n  if (Transition) {\n    dialog = /*#__PURE__*/React.createElement(Transition, {\n      appear: true,\n      unmountOnExit: true,\n      \"in\": !!show,\n      onExit: onExit,\n      onExiting: onExiting,\n      onExited: handleHidden,\n      onEnter: onEnter,\n      onEntering: onEntering,\n      onEntered: onEntered\n    }, dialog);\n  }\n\n  var backdropElement = null;\n\n  if (backdrop) {\n    var BackdropTransition = backdropTransition;\n    backdropElement = renderBackdrop({\n      ref: modal.setBackdropRef,\n      onClick: handleBackdropClick\n    });\n\n    if (BackdropTransition) {\n      backdropElement = /*#__PURE__*/React.createElement(BackdropTransition, {\n        appear: true,\n        \"in\": !!show\n      }, backdropElement);\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, ReactDOM.createPortal( /*#__PURE__*/React.createElement(React.Fragment, null, backdropElement, dialog), container));\n});\nvar propTypes = {\n  /**\n   * Set the visibility of the Modal\n   */\n  show: PropTypes.bool,\n\n  /**\n   * A DOM element, a `ref` to an element, or function that returns either. The Modal is appended to it's `container` element.\n   *\n   * For the sake of assistive technologies, the container should usually be the document body, so that the rest of the\n   * page content can be placed behind a virtual backdrop as well as a visual one.\n   */\n  container: PropTypes.any,\n\n  /**\n   * A callback fired when the Modal is opening.\n   */\n  onShow: PropTypes.func,\n\n  /**\n   * A callback fired when either the backdrop is clicked, or the escape key is pressed.\n   *\n   * The `onHide` callback only signals intent from the Modal,\n   * you must actually set the `show` prop to `false` for the Modal to close.\n   */\n  onHide: PropTypes.func,\n\n  /**\n   * Include a backdrop component.\n   */\n  backdrop: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['static'])]),\n\n  /**\n   * A function that returns the dialog component. Useful for custom\n   * rendering. **Note:** the component should make sure to apply the provided ref.\n   *\n   * ```js static\n   * renderDialog={props => <MyDialog {...props} />}\n   * ```\n   */\n  renderDialog: PropTypes.func,\n\n  /**\n   * A function that returns a backdrop component. Useful for custom\n   * backdrop rendering.\n   *\n   * ```js\n   *  renderBackdrop={props => <MyBackdrop {...props} />}\n   * ```\n   */\n  renderBackdrop: PropTypes.func,\n\n  /**\n   * A callback fired when the escape key, if specified in `keyboard`, is pressed.\n   */\n  onEscapeKeyDown: PropTypes.func,\n\n  /**\n   * A callback fired when the backdrop, if specified, is clicked.\n   */\n  onBackdropClick: PropTypes.func,\n\n  /**\n   * A css class or set of classes applied to the modal container when the modal is open,\n   * and removed when it is closed.\n   */\n  containerClassName: PropTypes.string,\n\n  /**\n   * Close the modal when escape key is pressed\n   */\n  keyboard: PropTypes.bool,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the dialog component.\n   */\n  transition: PropTypes.elementType,\n\n  /**\n   * A `react-transition-group@2.0.0` `<Transition/>` component used\n   * to control animations for the backdrop components.\n   */\n  backdropTransition: PropTypes.elementType,\n\n  /**\n   * When `true` The modal will automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes. This also\n   * works correctly with any Modal children that have the `autoFocus` prop.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will prevent focus from leaving the Modal while open.\n   *\n   * Generally this should never be set to `false` as it makes the Modal less\n   * accessible to assistive technologies, like screen readers.\n   */\n  enforceFocus: PropTypes.bool,\n\n  /**\n   * When `true` The modal will restore focus to previously focused element once\n   * modal is hidden\n   */\n  restoreFocus: PropTypes.bool,\n\n  /**\n   * Options passed to focus function when `restoreFocus` is set to `true`\n   *\n   * @link  https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/focus#Parameters\n   */\n  restoreFocusOptions: PropTypes.shape({\n    preventScroll: PropTypes.bool\n  }),\n\n  /**\n   * Callback fired before the Modal transitions in\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition in\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning in\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * Callback fired right before the Modal transitions out\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * Callback fired as the Modal begins to transition out\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * Callback fired after the Modal finishes transitioning out\n   */\n  onExited: PropTypes.func,\n\n  /**\n   * A ModalManager instance used to track and manage the state of open\n   * Modals. Useful when customizing how modals interact within a container\n   */\n  manager: PropTypes.instanceOf(ModalManager)\n};\nModal.displayName = 'Modal';\nModal.propTypes = propTypes;\nexport default Object.assign(Modal, {\n  Manager: ModalManager\n});","import ownerDocument from 'dom-helpers/ownerDocument';\nimport { useState, useEffect } from 'react';\nexport var resolveContainerRef = function resolveContainerRef(ref) {\n  var _ref;\n\n  if (typeof document === 'undefined') return null;\n  if (ref == null) return ownerDocument().body;\n  if (typeof ref === 'function') ref = ref();\n  if (ref && 'current' in ref) ref = ref.current;\n  if ((_ref = ref) == null ? void 0 : _ref.nodeType) return ref || null;\n  return null;\n};\nexport default function useWaitForDOMRef(ref, onResolved) {\n  var _useState = useState(function () {\n    return resolveContainerRef(ref);\n  }),\n      resolvedRef = _useState[0],\n      setRef = _useState[1];\n\n  if (!resolvedRef) {\n    var earlyRef = resolveContainerRef(ref);\n    if (earlyRef) setRef(earlyRef);\n  }\n\n  useEffect(function () {\n    if (onResolved && resolvedRef) {\n      onResolved(resolvedRef);\n    }\n  }, [onResolved, resolvedRef]);\n  useEffect(function () {\n    var nextRef = resolveContainerRef(ref);\n\n    if (nextRef !== resolvedRef) {\n      setRef(nextRef);\n    }\n  }, [ref, resolvedRef]);\n  return resolvedRef;\n}","import React from 'react';\nvar DropdownContext = React.createContext(null);\nexport default DropdownContext;","import PropTypes from 'prop-types';\nimport React, { useContext } from 'react';\nimport DropdownContext from './DropdownContext';\n\nvar noop = function noop() {};\n/**\n * Wires up Dropdown toggle functionality, returning a set a props to attach\n * to the element that functions as the dropdown toggle (generally a button).\n *\n * @memberOf Dropdown\n */\n\n\nexport function useDropdownToggle() {\n  var _ref = useContext(DropdownContext) || {},\n      _ref$show = _ref.show,\n      show = _ref$show === void 0 ? false : _ref$show,\n      _ref$toggle = _ref.toggle,\n      toggle = _ref$toggle === void 0 ? noop : _ref$toggle,\n      setToggle = _ref.setToggle;\n\n  return [{\n    ref: setToggle || noop,\n    'aria-haspopup': true,\n    'aria-expanded': !!show\n  }, {\n    show: show,\n    toggle: toggle\n  }];\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Toggle element. The `props`\n   * argument should spread through to **a component that can accept a ref**. Use\n   * the `onToggle` argument to toggle the menu open or closed\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   toggle: (show: boolean) => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     aria-haspopup: true\n   *     aria-expanded: boolean\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired\n};\n\n/**\n * Also exported as `<Dropdown.Toggle>` from `Dropdown`.\n *\n * @displayName DropdownToggle\n * @memberOf Dropdown\n */\nfunction DropdownToggle(_ref2) {\n  var children = _ref2.children;\n\n  var _useDropdownToggle = useDropdownToggle(),\n      props = _useDropdownToggle[0],\n      _useDropdownToggle$ = _useDropdownToggle[1],\n      show = _useDropdownToggle$.show,\n      toggle = _useDropdownToggle$.toggle;\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children({\n    show: show,\n    toggle: toggle,\n    props: props\n  }));\n}\n\nDropdownToggle.displayName = 'ReactOverlaysDropdownToggle';\nDropdownToggle.propTypes = propTypes;\n/** @component */\n\nexport default DropdownToggle;","import arrow from '@popperjs/core/lib/modifiers/arrow';\nimport computeStyles from '@popperjs/core/lib/modifiers/computeStyles';\nimport eventListeners from '@popperjs/core/lib/modifiers/eventListeners';\nimport flip from '@popperjs/core/lib/modifiers/flip';\nimport hide from '@popperjs/core/lib/modifiers/hide';\nimport offset from '@popperjs/core/lib/modifiers/offset';\nimport popperOffsets from '@popperjs/core/lib/modifiers/popperOffsets';\nimport preventOverflow from '@popperjs/core/lib/modifiers/preventOverflow';\nimport { placements } from '@popperjs/core/lib/enums';\nimport { popperGenerator } from '@popperjs/core/lib/popper-base'; // For the common JS build we will turn this file into a bundle with no imports.\n// This is b/c the Popper lib is all esm files, and would break in a common js only environment\n\nexport var createPopper = popperGenerator({\n  defaultModifiers: [hide, popperOffsets, computeStyles, eventListeners, offset, flip, preventOverflow, arrow]\n});\nexport { placements };","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport useSafeState from '@restart/hooks/useSafeState';\nimport { createPopper } from './popper';\nvar initialPopperStyles = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  opacity: '0',\n  pointerEvents: 'none'\n};\nvar initialArrowStyles = {}; // until docjs supports type exports...\n\nexport function toModifierMap(modifiers) {\n  var result = {};\n\n  if (!Array.isArray(modifiers)) {\n    return modifiers || result;\n  } // eslint-disable-next-line no-unused-expressions\n\n\n  modifiers == null ? void 0 : modifiers.forEach(function (m) {\n    result[m.name] = m;\n  });\n  return result;\n}\nexport function toModifierArray(map) {\n  if (map === void 0) {\n    map = {};\n  }\n\n  if (Array.isArray(map)) return map;\n  return Object.keys(map).map(function (k) {\n    map[k].name = k;\n    return map[k];\n  });\n}\n\n/**\n * Position an element relative some reference element using Popper.js\n *\n * @param referenceElement\n * @param popperElement\n * @param {object}      options\n * @param {object=}     options.modifiers Popper.js modifiers\n * @param {boolean=}    options.enabled toggle the popper functionality on/off\n * @param {string=}     options.placement The popper element placement relative to the reference element\n * @param {string=}     options.strategy the positioning strategy\n * @param {boolean=}    options.eventsEnabled have Popper listen on window resize events to reposition the element\n * @param {function=}   options.onCreate called when the popper is created\n * @param {function=}   options.onUpdate called when the popper is updated\n *\n * @returns {UsePopperState} The popper state\n */\nfunction usePopper(referenceElement, popperElement, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      _ref$enabled = _ref.enabled,\n      enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n      _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? 'bottom' : _ref$placement,\n      _ref$strategy = _ref.strategy,\n      strategy = _ref$strategy === void 0 ? 'absolute' : _ref$strategy,\n      _ref$eventsEnabled = _ref.eventsEnabled,\n      eventsEnabled = _ref$eventsEnabled === void 0 ? true : _ref$eventsEnabled,\n      userModifiers = _ref.modifiers,\n      popperOptions = _objectWithoutPropertiesLoose(_ref, [\"enabled\", \"placement\", \"strategy\", \"eventsEnabled\", \"modifiers\"]);\n\n  var popperInstanceRef = useRef();\n  var scheduleUpdate = useCallback(function () {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.update();\n    }\n  }, []);\n\n  var _useSafeState = useSafeState(useState({\n    placement: placement,\n    scheduleUpdate: scheduleUpdate,\n    outOfBoundaries: false,\n    styles: initialPopperStyles,\n    arrowStyles: initialArrowStyles\n  })),\n      state = _useSafeState[0],\n      setState = _useSafeState[1];\n\n  var updateModifier = useMemo(function () {\n    return {\n      name: 'updateStateModifier',\n      enabled: true,\n      phase: 'afterWrite',\n      requires: ['computeStyles'],\n      fn: function fn(data) {\n        var _data$state$modifiers, _data$state$styles, _data$state$styles2;\n\n        setState({\n          scheduleUpdate: scheduleUpdate,\n          outOfBoundaries: !!((_data$state$modifiers = data.state.modifiersData.hide) == null ? void 0 : _data$state$modifiers.isReferenceHidden),\n          placement: data.state.placement,\n          styles: _extends({}, (_data$state$styles = data.state.styles) == null ? void 0 : _data$state$styles.popper),\n          arrowStyles: _extends({}, (_data$state$styles2 = data.state.styles) == null ? void 0 : _data$state$styles2.arrow),\n          state: data.state\n        });\n      }\n    };\n  }, [scheduleUpdate, setState]);\n  var modifiers = toModifierArray(userModifiers);\n  var eventsModifier = modifiers.find(function (m) {\n    return m.name === 'eventListeners';\n  });\n\n  if (!eventsModifier && eventsEnabled) {\n    eventsModifier = {\n      name: 'eventListeners',\n      enabled: true\n    };\n    modifiers = [].concat(modifiers, [eventsModifier]);\n  } // A placement difference in state means popper determined a new placement\n  // apart from the props value. By the time the popper element is rendered with\n  // the new position Popper has already measured it, if the place change triggers\n  // a size change it will result in a misaligned popper. So we schedule an update to be sure.\n\n\n  useEffect(function () {\n    scheduleUpdate();\n  }, [state.placement, scheduleUpdate]);\n  useEffect(function () {\n    if (!popperInstanceRef.current || !enabled) return;\n    popperInstanceRef.current.setOptions({\n      placement: placement,\n      strategy: strategy,\n      modifiers: [].concat(modifiers, [updateModifier])\n    }); // intentionally NOT re-running on new modifiers\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [strategy, placement, eventsModifier.enabled, updateModifier, enabled]);\n  useEffect(function () {\n    if (!enabled || referenceElement == null || popperElement == null) {\n      return undefined;\n    }\n\n    popperInstanceRef.current = createPopper(referenceElement, popperElement, _extends({}, popperOptions, {\n      placement: placement,\n      strategy: strategy,\n      modifiers: [].concat(modifiers, [updateModifier])\n    }));\n    return function () {\n      if (popperInstanceRef.current != null) {\n        popperInstanceRef.current.destroy();\n        popperInstanceRef.current = undefined;\n        setState(function (s) {\n          return _extends({}, s, {\n            styles: initialPopperStyles,\n            arrowStyles: initialArrowStyles\n          });\n        });\n      }\n    }; // This is only run once to _create_ the popper\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [enabled, referenceElement, popperElement]);\n  return state;\n}\n\nexport default usePopper;","import ownerDocument from 'dom-helpers/ownerDocument';\nimport safeFindDOMNode from './safeFindDOMNode';\nexport default (function (componentOrElement) {\n  return ownerDocument(safeFindDOMNode(componentOrElement));\n});","import ReactDOM from 'react-dom';\nexport default function safeFindDOMNode(componentOrElement) {\n  if (componentOrElement && 'setState' in componentOrElement) {\n    return ReactDOM.findDOMNode(componentOrElement);\n  }\n\n  return componentOrElement != null ? componentOrElement : null;\n}","import contains from 'dom-helpers/contains';\nimport listen from 'dom-helpers/listen';\nimport { useCallback, useEffect, useRef } from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport warning from 'warning';\nimport ownerDocument from './ownerDocument';\nvar escapeKeyCode = 27;\n\nvar noop = function noop() {};\n\nfunction isLeftClickEvent(event) {\n  return event.button === 0;\n}\n\nfunction isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nvar getRefTarget = function getRefTarget(ref) {\n  return ref && ('current' in ref ? ref.current : ref);\n};\n\n/**\n * The `useRootClose` hook registers your callback on the document\n * when rendered. Powers the `<Overlay/>` component. This is used achieve modal\n * style behavior where your callback is triggered when the user tries to\n * interact with the rest of the document or hits the `esc` key.\n *\n * @param {Ref<HTMLElement>| HTMLElement} ref  The element boundary\n * @param {function} onRootClose\n * @param {object=}  options\n * @param {boolean=} options.disabled\n * @param {string=}  options.clickTrigger The DOM event name (click, mousedown, etc) to attach listeners on\n */\nfunction useRootClose(ref, onRootClose, _temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      disabled = _ref.disabled,\n      _ref$clickTrigger = _ref.clickTrigger,\n      clickTrigger = _ref$clickTrigger === void 0 ? 'click' : _ref$clickTrigger;\n\n  var preventMouseRootCloseRef = useRef(false);\n  var onClose = onRootClose || noop;\n  var handleMouseCapture = useCallback(function (e) {\n    var currentTarget = getRefTarget(ref);\n    warning(!!currentTarget, 'RootClose captured a close event but does not have a ref to compare it to. ' + 'useRootClose(), should be passed a ref that resolves to a DOM node');\n    preventMouseRootCloseRef.current = !currentTarget || isModifiedEvent(e) || !isLeftClickEvent(e) || !!contains(currentTarget, e.target);\n  }, [ref]);\n  var handleMouse = useEventCallback(function (e) {\n    if (!preventMouseRootCloseRef.current) {\n      onClose(e);\n    }\n  });\n  var handleKeyUp = useEventCallback(function (e) {\n    if (e.keyCode === escapeKeyCode) {\n      onClose(e);\n    }\n  });\n  useEffect(function () {\n    if (disabled || ref == null) return undefined;\n    var doc = ownerDocument(getRefTarget(ref)); // Use capture for this listener so it fires before React's listener, to\n    // avoid false positives in the contains() check below if the target DOM\n    // element is removed in the React mouse callback.\n\n    var removeMouseCaptureListener = listen(doc, clickTrigger, handleMouseCapture, true);\n    var removeMouseListener = listen(doc, clickTrigger, handleMouse);\n    var removeKeyupListener = listen(doc, 'keyup', handleKeyUp);\n    var mobileSafariHackListeners = [];\n\n    if ('ontouchstart' in doc.documentElement) {\n      mobileSafariHackListeners = [].slice.call(doc.body.children).map(function (el) {\n        return listen(el, 'mousemove', noop);\n      });\n    }\n\n    return function () {\n      removeMouseCaptureListener();\n      removeMouseListener();\n      removeKeyupListener();\n      mobileSafariHackListeners.forEach(function (remove) {\n        return remove();\n      });\n    };\n  }, [ref, disabled, clickTrigger, handleMouseCapture, handleMouse, handleKeyUp]);\n}\n\nexport default useRootClose;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport PropTypes from 'prop-types';\nimport React, { useContext, useRef } from 'react';\nimport useCallbackRef from '@restart/hooks/useCallbackRef';\nimport DropdownContext from './DropdownContext';\nimport usePopper, { toModifierMap } from './usePopper';\nimport useRootClose from './useRootClose';\n\nvar noop = function noop() {};\n/**\n * @memberOf Dropdown\n * @param {object}  options\n * @param {boolean} options.flip Automatically adjust the menu `drop` position based on viewport edge detection\n * @param {boolean} options.show Display the menu manually, ignored in the context of a `Dropdown`\n * @param {boolean} options.usePopper opt in/out of using PopperJS to position menus. When disabled you must position it yourself.\n * @param {string}  options.rootCloseEvent The pointer event to listen for when determining \"clicks outside\" the menu for triggering a close.\n * @param {object}  options.popperConfig Options passed to the [`usePopper`](/api/usePopper) hook.\n */\n\n\nexport function useDropdownMenu(options) {\n  var _modifiers$arrow;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var context = useContext(DropdownContext);\n\n  var _useCallbackRef = useCallbackRef(),\n      arrowElement = _useCallbackRef[0],\n      attachArrowRef = _useCallbackRef[1];\n\n  var hasShownRef = useRef(false);\n  var _options = options,\n      flip = _options.flip,\n      rootCloseEvent = _options.rootCloseEvent,\n      _options$popperConfig = _options.popperConfig,\n      popperConfig = _options$popperConfig === void 0 ? {} : _options$popperConfig,\n      _options$usePopper = _options.usePopper,\n      shouldUsePopper = _options$usePopper === void 0 ? !!context : _options$usePopper;\n  var show = (context == null ? void 0 : context.show) == null ? options.show : context.show;\n  var alignEnd = (context == null ? void 0 : context.alignEnd) == null ? options.alignEnd : context.alignEnd;\n\n  if (show && !hasShownRef.current) {\n    hasShownRef.current = true;\n  }\n\n  var handleClose = function handleClose(e) {\n    context == null ? void 0 : context.toggle(false, e);\n  };\n\n  var _ref = context || {},\n      drop = _ref.drop,\n      setMenu = _ref.setMenu,\n      menuElement = _ref.menuElement,\n      toggleElement = _ref.toggleElement;\n\n  var placement = alignEnd ? 'bottom-end' : 'bottom-start';\n  if (drop === 'up') placement = alignEnd ? 'top-end' : 'top-start';else if (drop === 'right') placement = alignEnd ? 'right-end' : 'right-start';else if (drop === 'left') placement = alignEnd ? 'left-end' : 'left-start';\n  var modifiers = toModifierMap(popperConfig.modifiers);\n  var popper = usePopper(toggleElement, menuElement, _extends({}, popperConfig, {\n    placement: placement,\n    enabled: !!(shouldUsePopper && show),\n    modifiers: _extends({}, modifiers, {\n      eventListeners: {\n        enabled: !!show\n      },\n      arrow: _extends({}, modifiers.arrow, {\n        enabled: !!arrowElement,\n        options: _extends({}, (_modifiers$arrow = modifiers.arrow) == null ? void 0 : _modifiers$arrow.options, {\n          element: arrowElement\n        })\n      }),\n      flip: _extends({\n        enabled: !!flip\n      }, modifiers.flip)\n    })\n  }));\n  var menu;\n  var menuProps = {\n    ref: setMenu || noop,\n    'aria-labelledby': toggleElement == null ? void 0 : toggleElement.id\n  };\n  var childArgs = {\n    show: show,\n    alignEnd: alignEnd,\n    hasShown: hasShownRef.current,\n    close: handleClose\n  };\n\n  if (!shouldUsePopper) {\n    menu = _extends({}, childArgs, {\n      props: menuProps\n    });\n  } else {\n    menu = _extends({}, popper, {}, childArgs, {\n      props: _extends({}, menuProps, {\n        style: popper.styles\n      }),\n      arrowProps: {\n        ref: attachArrowRef,\n        style: popper.arrowStyles\n      }\n    });\n  }\n\n  useRootClose(menuElement, handleClose, {\n    clickTrigger: rootCloseEvent,\n    disabled: !(menu && show)\n  });\n  return menu;\n}\nvar propTypes = {\n  /**\n   * A render prop that returns a Menu element. The `props`\n   * argument should spread through to **a component that can accept a ref**.\n   *\n   * @type {Function ({\n   *   show: boolean,\n   *   alignEnd: boolean,\n   *   close: (?SyntheticEvent) => void,\n   *   placement: Placement,\n   *   outOfBoundaries: ?boolean,\n   *   scheduleUpdate: () => void,\n   *   props: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *     aria-labelledby: ?string\n   *   },\n   *   arrowProps: {\n   *     ref: (?HTMLElement) => void,\n   *     style: { [string]: string | number },\n   *   },\n   * }) => React.Element}\n   */\n  children: PropTypes.func.isRequired,\n\n  /**\n   * Controls the visible state of the menu, generally this is\n   * provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  show: PropTypes.bool,\n\n  /**\n   * Aligns the dropdown menu to the 'end' of it's placement position.\n   * Generally this is provided by the parent `Dropdown` component,\n   * but may also be specified as a prop directly.\n   */\n  alignEnd: PropTypes.bool,\n\n  /**\n   * Enables the Popper.js `flip` modifier, allowing the Dropdown to\n   * automatically adjust it's placement in case of overlap with the viewport or toggle.\n   * Refer to the [flip docs](https://popper.js.org/popper-documentation.html#modifiers..flip.enabled) for more info\n   */\n  flip: PropTypes.bool,\n  usePopper: PropTypes.oneOf([true, false]),\n\n  /**\n   * A set of popper options and props passed directly to react-popper's Popper component.\n   */\n  popperConfig: PropTypes.object,\n\n  /**\n   * Override the default event used by RootCloseWrapper.\n   */\n  rootCloseEvent: PropTypes.string\n};\nvar defaultProps = {\n  usePopper: true\n};\n\n/**\n * Also exported as `<Dropdown.Menu>` from `Dropdown`.\n *\n * @displayName DropdownMenu\n * @memberOf Dropdown\n */\nfunction DropdownMenu(_ref2) {\n  var children = _ref2.children,\n      options = _objectWithoutPropertiesLoose(_ref2, [\"children\"]);\n\n  var args = useDropdownMenu(options);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, args.hasShown ? children(args) : null);\n}\n\nDropdownMenu.displayName = 'ReactOverlaysDropdownMenu';\nDropdownMenu.propTypes = propTypes;\nDropdownMenu.defaultProps = defaultProps;\n/** @component */\n\nexport default DropdownMenu;","import isWindow from 'dom-helpers/isWindow';\nimport ownerDocument from 'dom-helpers/ownerDocument';\n\nfunction isBody(node) {\n  return node && node.tagName.toLowerCase() === 'body';\n}\n\nfunction bodyIsOverflowing(node) {\n  var doc = isWindow(node) ? ownerDocument() : ownerDocument(node);\n  var win = isWindow(node) || doc.defaultView;\n  return doc.body.clientWidth < win.innerWidth;\n}\n\nexport default function isOverflowing(container) {\n  var win = isWindow(container);\n  return win || isBody(container) ? bodyIsOverflowing(container) : container.scrollHeight > container.clientHeight;\n}","var BLACKLIST = ['template', 'script', 'style'];\n\nvar isHidable = function isHidable(_ref) {\n  var nodeType = _ref.nodeType,\n      tagName = _ref.tagName;\n  return nodeType === 1 && BLACKLIST.indexOf(tagName.toLowerCase()) === -1;\n};\n\nvar siblings = function siblings(container, exclude, cb) {\n  [].forEach.call(container.children, function (node) {\n    if (exclude.indexOf(node) === -1 && isHidable(node)) {\n      cb(node);\n    }\n  });\n};\n\nexport function ariaHidden(show, node) {\n  if (!node) return;\n\n  if (show) {\n    node.setAttribute('aria-hidden', 'true');\n  } else {\n    node.removeAttribute('aria-hidden');\n  }\n}\nexport function hideSiblings(container, _ref2) {\n  var dialog = _ref2.dialog,\n      backdrop = _ref2.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(true, node);\n  });\n}\nexport function showSiblings(container, _ref3) {\n  var dialog = _ref3.dialog,\n      backdrop = _ref3.backdrop;\n  siblings(container, [dialog, backdrop], function (node) {\n    return ariaHidden(false, node);\n  });\n}","import addClass from 'dom-helpers/addClass';\nimport removeClass from 'dom-helpers/removeClass';\nimport css from 'dom-helpers/css';\nimport getScrollbarSize from 'dom-helpers/scrollbarSize';\nimport isOverflowing from './isOverflowing';\nimport { ariaHidden, hideSiblings, showSiblings } from './manageAriaHidden';\n\nfunction findIndexOf(arr, cb) {\n  var idx = -1;\n  arr.some(function (d, i) {\n    if (cb(d, i)) {\n      idx = i;\n      return true;\n    }\n\n    return false;\n  });\n  return idx;\n}\n\n/**\n * Proper state management for containers and the modals in those containers.\n *\n * @internal Used by the Modal to ensure proper styling of containers.\n */\nvar ModalManager = /*#__PURE__*/function () {\n  function ModalManager(_temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n        _ref$hideSiblingNodes = _ref.hideSiblingNodes,\n        hideSiblingNodes = _ref$hideSiblingNodes === void 0 ? true : _ref$hideSiblingNodes,\n        _ref$handleContainerO = _ref.handleContainerOverflow,\n        handleContainerOverflow = _ref$handleContainerO === void 0 ? true : _ref$handleContainerO;\n\n    this.hideSiblingNodes = void 0;\n    this.handleContainerOverflow = void 0;\n    this.modals = void 0;\n    this.containers = void 0;\n    this.data = void 0;\n    this.scrollbarSize = void 0;\n    this.hideSiblingNodes = hideSiblingNodes;\n    this.handleContainerOverflow = handleContainerOverflow;\n    this.modals = [];\n    this.containers = [];\n    this.data = [];\n    this.scrollbarSize = getScrollbarSize();\n  }\n\n  var _proto = ModalManager.prototype;\n\n  _proto.isContainerOverflowing = function isContainerOverflowing(modal) {\n    var data = this.data[this.containerIndexFromModal(modal)];\n    return data && data.overflowing;\n  };\n\n  _proto.containerIndexFromModal = function containerIndexFromModal(modal) {\n    return findIndexOf(this.data, function (d) {\n      return d.modals.indexOf(modal) !== -1;\n    });\n  };\n\n  _proto.setContainerStyle = function setContainerStyle(containerState, container) {\n    var style = {\n      overflow: 'hidden'\n    }; // we are only interested in the actual `style` here\n    // because we will override it\n\n    containerState.style = {\n      overflow: container.style.overflow,\n      paddingRight: container.style.paddingRight\n    };\n\n    if (containerState.overflowing) {\n      // use computed style, here to get the real padding\n      // to add our scrollbar width\n      style.paddingRight = parseInt(css(container, 'paddingRight') || '0', 10) + this.scrollbarSize + \"px\";\n    }\n\n    css(container, style);\n  };\n\n  _proto.removeContainerStyle = function removeContainerStyle(containerState, container) {\n    var style = containerState.style;\n    Object.keys(style).forEach(function (key) {\n      container.style[key] = style[key];\n    });\n  };\n\n  _proto.add = function add(modal, container, className) {\n    var modalIdx = this.modals.indexOf(modal);\n    var containerIdx = this.containers.indexOf(container);\n\n    if (modalIdx !== -1) {\n      return modalIdx;\n    }\n\n    modalIdx = this.modals.length;\n    this.modals.push(modal);\n\n    if (this.hideSiblingNodes) {\n      hideSiblings(container, modal);\n    }\n\n    if (containerIdx !== -1) {\n      this.data[containerIdx].modals.push(modal);\n      return modalIdx;\n    }\n\n    var data = {\n      modals: [modal],\n      // right now only the first modal of a container will have its classes applied\n      classes: className ? className.split(/\\s+/) : [],\n      overflowing: isOverflowing(container)\n    };\n\n    if (this.handleContainerOverflow) {\n      this.setContainerStyle(data, container);\n    }\n\n    data.classes.forEach(addClass.bind(null, container));\n    this.containers.push(container);\n    this.data.push(data);\n    return modalIdx;\n  };\n\n  _proto.remove = function remove(modal) {\n    var modalIdx = this.modals.indexOf(modal);\n\n    if (modalIdx === -1) {\n      return;\n    }\n\n    var containerIdx = this.containerIndexFromModal(modal);\n    var data = this.data[containerIdx];\n    var container = this.containers[containerIdx];\n    data.modals.splice(data.modals.indexOf(modal), 1);\n    this.modals.splice(modalIdx, 1); // if that was the last modal in a container,\n    // clean up the container\n\n    if (data.modals.length === 0) {\n      data.classes.forEach(removeClass.bind(null, container));\n\n      if (this.handleContainerOverflow) {\n        this.removeContainerStyle(data, container);\n      }\n\n      if (this.hideSiblingNodes) {\n        showSiblings(container, modal);\n      }\n\n      this.containers.splice(containerIdx, 1);\n      this.data.splice(containerIdx, 1);\n    } else if (this.hideSiblingNodes) {\n      // otherwise make sure the next top modal is visible to a SR\n      var _data$modals = data.modals[data.modals.length - 1],\n          backdrop = _data$modals.backdrop,\n          dialog = _data$modals.dialog;\n      ariaHidden(false, dialog);\n      ariaHidden(false, backdrop);\n    }\n  };\n\n  _proto.isTopModal = function isTopModal(modal) {\n    return !!this.modals.length && this.modals[this.modals.length - 1] === modal;\n  };\n\n  return ModalManager;\n}();\n\nexport default ModalManager;"],"sourceRoot":""}